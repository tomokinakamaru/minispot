[project]
name = "redspot"
requires-python = ">=3.10"
dynamic = ["version"]
dependencies = ["notebook>=7.2.2", "nbdime>=4.0.2"]

[project.scripts]
redspot = "redspot.__main__:main"

[build-system]
requires = []
build-backend = "hatchling.build"

[dependency-groups]
dev = [
  # for build
  "hatchling>=1.26.3",
  "hatch-nodejs-version>=0.3.2",
  "hatch-jupyter-builder>=0.9.1",
  "jupyterlab>=4.2.5",
  "editables>=0.5",
  "setuptools>=75.5.0",
  # for lint and test
  "ruff>=0.7.3",
  "pytest-cov>=6.0.0",
  "pytest>=8.3.3"
]

[tool.pdm]
distribution = true

[tool.pdm.scripts]
lint.composite = [
  "ruff check .",
  "jlpm run eslint .",
  "jlpm run prettier --check ."
]
fix.composite = [
  "ruff format .",
  "jlpm run eslint --fix .",
  "jlpm run prettier --write ."
]
test.composite = [
  "pytest --cov --cov-report=html --cov-report=term --cov-report=xml",
  "jlpm playwright test"
]
post_install.composite = ["jupyter labextension develop --overwrite ."]

[tool.hatch.build.targets.wheel.shared-data]
"labextension" = "share/jupyter/labextensions/redspot"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.5"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = ["labextension/package.json"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
npm = ["jlpm"]
build_cmd = "build:prod"

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
npm = ["jlpm"]
build_cmd = "build"
build_dir = "labextension"
source_dir = "redspot-frontend"

[tool.hatch.version]
source = "nodejs"

[tool.pytest.ini_options]
addopts = "-vv"
filterwarnings = "error"
python_files = "test*.py"

[tool.coverage.run]
branch = true
